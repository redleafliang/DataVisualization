<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-export SYSTEM "http://xml.evernote.com/pub/evernote-export3.dtd">
<en-export export-date="20170525T062504Z" application="Evernote" version="Evernote Mac 6.11 (454876)">
<note><title>D3.JS</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">
<en-note><div><font style="font-size: 36px;">Selections</font></div><div><font style="font-size: 18px;">example:</font></div><div><font style="font-size: 18px;"><br/></font></div><div><font style="font-size: 18px;"><span style="font-family: Menlo, monospace;">d3.selectAll(</span><span style="font-family: Menlo, monospace; color: rgb(117, 107, 177);">&quot;p&quot;</span><span style="font-family: Menlo, monospace;">).style(</span><span style="font-family: Menlo, monospace; color: rgb(117, 107, 177);">&quot;color&quot;</span><span style="font-family: Menlo, monospace;">, </span><span style="font-family: Menlo, monospace; color: rgb(117, 107, 177);">&quot;white</span><font face="Menlo, monospace" color="#756bb1">”</font><font face="Menlo, monospace">);</font></font></div><div><font style="font-size: 18px;" face="Menlo, monospace">相当于：</font></div><div><font style="font-size: 18px;"><span>var</span><span> paragraphs = document.getElementsByTagName(</span><span>&quot;p&quot;</span><span>);</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>for</span><span> (</span><span>var</span><span> i = </span><span>0</span><span>; i &lt; paragraphs.length; i++) {</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  </span><span>var</span><span> paragraph = paragraphs.item(i);</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  paragraph.style.setProperty(</span><span>&quot;color&quot;</span><span>, </span><span>&quot;white&quot;</span><span>, null);</span></font></div><div><span><font style="font-size: 18px;">}</font></span></div><div><span><font style="font-size: 18px;"><br/></font></span></div><div><font style="font-size: 18px;"><span>d3</span><span>.</span><span>selectAll</span><span>(</span><span>&quot;</span><span>p</span><span>&quot;</span><span>)</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>    .</span><span>attr</span><span>(</span><span>&quot;</span><span>class</span><span>&quot;</span><span>, </span><span>&quot;</span><span>graf</span><span>&quot;</span><span>)</span></font></div><div><font style="font-size: 18px;"><span>    .</span><span>style</span><span>(</span><span>&quot;</span><span>color</span><span>&quot;</span><span>, </span><span>&quot;</span><span>red</span><span>”);</span></font></div><div><font style="font-size: 18px;">相当于：</font></div><div><font style="font-size: 18px;"><span>var</span><span> p </span><span>=</span><span> </span><span>d3</span><span>.</span><span>selectAll</span><span>(</span><span>&quot;</span><span>p</span><span>&quot;</span><span>);</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>p</span><span>.</span><span>attr</span><span>(</span><span>&quot;</span><span>class</span><span>&quot;</span><span>, </span><span>&quot;</span><span>graf</span><span>&quot;</span><span>);</span></font></div><div><font style="font-size: 18px;"><span>p</span><span>.</span><span>style</span><span>(</span><span>&quot;</span><span>color</span><span>&quot;</span><span>, </span><span>&quot;</span><span>red</span><span>&quot;</span><span>);</span></font></div><div><font face="Menlo, monospace"><br/></font></div><div><span style="font-family: Menlo, monospace;">d3.select(</span><span style="font-family: Menlo, monospace; color: rgb(117, 107, 177);">&quot;body&quot;</span><span style="font-family: Menlo, monospace;">).style(</span><span style="font-family: Menlo, monospace; color: rgb(117, 107, 177);">&quot;background-color&quot;</span><span style="font-family: Menlo, monospace;">, </span><span style="font-family: Menlo, monospace; color: rgb(117, 107, 177);">&quot;black</span><font face="Menlo, monospace" color="#756bb1">”</font><font face="Menlo, monospace">);</font></div><div><span style="font-family: Menlo, monospace;"><br/></span></div><h3 style="text-align: start;"><span style="font-weight: bold;">Selecting Elements</span></h3><div><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#selection">#</a><span> d3.</span><span style="font-weight: bold;">selection</span><span>() </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/selection/index.js#L38">&lt;&gt;</a></font></div><div><br/></div><div style="text-align: start;"><font style="font-size: 18px;"><a href="https://github.com/d3/d3-selection#select">Selects</a><span> the root element, </span><span>document.documentElement</span><span>. </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>This function can also be used to test for selections (</span><span>instanceof d3.selection</span><span>) or to extend the selection prototype. </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>For example, to add a method to check checkboxes:</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>d3</span><span>.</span><span>selection</span><span>.</span><span>prototype</span><span>.</span><span>checked</span><span> </span><span>=</span><span> </span><span>function</span><span>(</span><span>value</span><span>) {</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  </span><span>return</span><span> </span><span>arguments</span><span>.</span><span>length</span><span> </span><span>&lt;</span><span> </span><span>1</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>      </span><span>?</span><span> </span><span>this</span><span>.</span><span>property</span><span>(</span><span>&quot;</span><span>checked</span><span>&quot;</span><span>)</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>      </span><span>:</span><span> </span><span>this</span><span>.</span><span>property</span><span>(</span><span>&quot;</span><span>checked</span><span>&quot;</span><span>, </span><span>!!</span><span>value);</span></font></div><div style="text-align: start;"><span><font style="font-size: 18px;">};</font></span></div><div style="text-align: start;"><span><font style="font-size: 18px;">And then to use:</font></span></div><div><font style="font-size: 18px;"><br/></font></div><div><font style="font-size: 18px;"><span style="box-sizing: border-box; color: rgb(51, 51, 51);">d3</span>.<span style="box-sizing: border-box; color: rgb(121, 93, 163);">selectAll</span>(<span style="box-sizing: border-box; color: rgb(24, 54, 145);"><span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span>input[type=checkbox]<span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span></span>).<span style="box-sizing: border-box; color: rgb(0, 134, 179);">checked</span>(<span style="box-sizing: border-box; color: rgb(0, 134, 179);">true</span>);</font></div><div><font style="font-size: 18px;"><br/></font></div><div><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#select">#</a><span> d3.</span><span style="font-weight: bold;">select</span><span>(</span><span style="font-style: italic;">selector</span><span>) </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/select.js#L3">&lt;&gt;</a></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>Selects the first element that matches the specified </span><span style="font-style: italic;">selector</span><span> string. </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>If no elements match the </span><span style="font-style: italic;">selector</span><span>, returns an empty selection. </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>If multiple elements match the </span><span style="font-style: italic;">selector</span><span>, only the first matching element (in document order) will be selected. </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>For example, to select the first anchor element:</span></font></div><div><font style="font-size: 18px;"><br/></font></div><pre style="color: rgb(36, 41, 46); font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace; text-align: start; background-color: rgb(246, 248, 250);"><font style="font-size: 18px;"><span style="box-sizing: border-box; color: rgb(167, 29, 93);">var</span> anchor <span style="box-sizing: border-box; color: rgb(167, 29, 93);">=</span> <span style="box-sizing: border-box; color: rgb(51, 51, 51);">d3</span>.<span style="box-sizing: border-box; color: rgb(0, 134, 179);">select</span>(<span style="box-sizing: border-box; color: rgb(24, 54, 145);"><span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span>a<span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span></span>);</font></pre><div style="text-align: start;"><font style="font-size: 18px;"><span>If the </span><span style="font-style: italic;">selector</span><span> is not a string, instead selects the specified node; </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>this is useful if you already have a reference to a node, such as </span><span>this</span><span> within an event listener or a global such as </span><span>document.body</span><span>. </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>For example, to make a clicked paragraph red:</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>d3</span><span>.</span><span>selectAll</span><span>(</span><span>&quot;</span><span>p</span><span>&quot;</span><span>).</span><span>on</span><span>(</span><span>&quot;</span><span>click</span><span>&quot;</span><span>, </span><span>function</span><span>() {</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  </span><span>d3</span><span>.</span><span>select</span><span>(</span><span>this</span><span>).</span><span>style</span><span>(</span><span>&quot;</span><span>color</span><span>&quot;</span><span>, </span><span>&quot;</span><span>red</span><span>&quot;</span><span>);</span></font></div><div><span>});</span></div><div><span><br/></span></div><div><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#selection_selectAll">#</a><span> </span><span style="font-style: italic;">selection</span><span>.</span><span style="font-weight: bold;">selectAll</span><span>(</span><span style="font-style: italic;">selector</span><span>) </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/selection/selectAll.js">&lt;&gt;</a></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>For each selected element, selects the descendant elements that match the specified </span><span style="font-style: italic;">selector</span><span> string. </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>The elements in the returned selection are grouped by their corresponding parent node in this selection. </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>If no element matches the specified selector for the current element, or if the </span><span style="font-style: italic;">selector</span><span> is null, the group at the current index will be empty. </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>The selected elements do not inherit data from this selection; use </span><a style="font-style: italic;" href="https://github.com/d3/d3-selection#selection_data">selection</a><a href="https://github.com/d3/d3-selection#selection_data">.data</a><span> to propagate data to children. </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>For example, to select the bold elements in every paragraph:</span></font></div><div><font style="font-size: 18px;"><br/></font></div><pre style="color: rgb(36, 41, 46); font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace; text-align: start; background-color: rgb(246, 248, 250);"><font style="font-size: 18px;"><span style="box-sizing: border-box; color: rgb(167, 29, 93);">var</span> b <span style="box-sizing: border-box; color: rgb(167, 29, 93);">=</span> <span style="box-sizing: border-box; color: rgb(51, 51, 51);">d3</span>.<span style="box-sizing: border-box; color: rgb(121, 93, 163);">selectAll</span>(<span style="box-sizing: border-box; color: rgb(24, 54, 145);"><span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span>p<span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span></span>).<span style="box-sizing: border-box; color: rgb(121, 93, 163);">selectAll</span>(<span style="box-sizing: border-box; color: rgb(24, 54, 145);"><span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span>b<span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span></span>);</font></pre><div style="text-align: start;"><font style="font-size: 18px;"><span>If the </span><span style="font-style: italic;">selector</span><span> is a function, it is evaluated for each selected element, in order, being passed the current datum (</span><span style="font-style: italic;">d</span><span>), the current index (</span><span style="font-style: italic;">i</span><span>), and the current group (</span><span style="font-style: italic;">nodes</span><span>), with </span><span style="font-style: italic;">this</span><span> as the current DOM element (</span><span style="font-style: italic;">nodes</span><span>[</span><span style="font-style: italic;">i</span><span>]). </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>It must return an array of elements (or a pseudo-array, such as a NodeList), or the empty array if there are no matching elements. </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>For example, to select the previous and next siblings of each paragraph:</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>var</span><span> sibling </span><span>=</span><span> </span><span>d3</span><span>.</span><span>selectAll</span><span>(</span><span>&quot;</span><span>p</span><span>&quot;</span><span>).</span><span>selectAll</span><span>(</span><span>function</span><span>() {</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  </span><span>return</span><span> [</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>    </span><span>this</span><span>.</span><span>previousElementSibling</span><span>,</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>    </span><span>this</span><span>.</span><span>nextElementSibling</span></font></div><div style="text-align: start;"><span><font style="font-size: 18px;">  ];</font></span></div><div style="text-align: start;"><span><font style="font-size: 18px;">});</font></span></div><div style="text-align: start;"><font style="font-size: 18px;"><span>Unlike </span><a style="font-style: italic;" href="https://github.com/d3/d3-selection#selection_select">selection</a><a href="https://github.com/d3/d3-selection#selection_select">.select</a><span>, </span><span style="font-style: italic;">selection</span><span>.selectAll does affect grouping: each selected descendant is grouped by the parent element in the originating selection. </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>Grouping plays an important role in the </span><a href="https://github.com/d3/d3-selection#joining-data">data join</a><span>. </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>See </span><a href="http://bost.ocks.org/mike/nest/">Nested Selections</a><span> and </span><a href="http://bost.ocks.org/mike/selection/">How Selections Work</a><span> for more on this topic.</span></font></div><div><br/></div><div><span><br/></span></div><div><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#selection_filter">#</a><span> </span><span style="font-style: italic;">selection</span><span>.</span><span style="font-weight: bold;">filter</span><span>(</span><span style="font-style: italic;">filter</span><span>) </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/selection/filter.js">&lt;&gt;</a></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>Filters the selection, returning a new selection that contains only the elements for which the specified </span><span style="font-style: italic;">filter</span><span> is true. </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>The </span><span style="font-style: italic;">filter</span><span> may be specified either as a selector string or a function. </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>If the </span><span style="font-style: italic;">filter</span><span> is a function, it is evaluated for each selected element, in order, being passed the current datum (</span><span style="font-style: italic;">d</span><span>), the current index (</span><span style="font-style: italic;">i</span><span>), and the current group (</span><span style="font-style: italic;">nodes</span><span>), with </span><span style="font-style: italic;">this</span><span> as the current DOM element (</span><span style="font-style: italic;">nodes</span><span>[</span><span style="font-style: italic;">i</span><span>]).</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><span><font style="font-size: 18px;">For example, to filter a selection of table rows to contain only even rows:</font></span></div><div><font style="font-size: 18px;"><br/></font></div><pre style="color: rgb(36, 41, 46); font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace; text-align: start; background-color: rgb(246, 248, 250);"><font style="font-size: 18px;"><span style="box-sizing: border-box; color: rgb(167, 29, 93);">var</span> even <span style="box-sizing: border-box; color: rgb(167, 29, 93);">=</span> <span style="box-sizing: border-box; color: rgb(51, 51, 51);">d3</span>.<span style="box-sizing: border-box; color: rgb(121, 93, 163);">selectAll</span>(<span style="box-sizing: border-box; color: rgb(24, 54, 145);"><span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span>tr<span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span></span>).<span style="box-sizing: border-box; color: rgb(121, 93, 163);">filter</span>(<span style="box-sizing: border-box; color: rgb(24, 54, 145);"><span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span>:nth-child(even)<span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span></span>);</font></pre><div style="text-align: start;"><font style="font-size: 18px;"><span>This is approximately equivalent to using </span><a href="https://github.com/d3/d3-selection#selectAll">d3.selectAll</a><span> directly, although the indexes may be different:</span></font></div><div><font style="font-size: 18px;"><br/></font></div><pre style="color: rgb(36, 41, 46); font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace; text-align: start; background-color: rgb(246, 248, 250);"><font style="font-size: 18px;"><span style="box-sizing: border-box; color: rgb(167, 29, 93);">var</span> even <span style="box-sizing: border-box; color: rgb(167, 29, 93);">=</span> <span style="box-sizing: border-box; color: rgb(51, 51, 51);">d3</span>.<span style="box-sizing: border-box; color: rgb(121, 93, 163);">selectAll</span>(<span style="box-sizing: border-box; color: rgb(24, 54, 145);"><span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span>tr:nth-child(even)<span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span></span>);</font></pre><div style="text-align: start;"><span><font style="font-size: 18px;">Similarly, using a function:</font></span></div><div><font style="font-size: 18px;"><br/></font></div><pre style="color: rgb(36, 41, 46); font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace; text-align: start; background-color: rgb(246, 248, 250);"><font style="font-size: 18px;"><span style="box-sizing: border-box; color: rgb(167, 29, 93);">var</span> even <span style="box-sizing: border-box; color: rgb(167, 29, 93);">=</span> <span style="box-sizing: border-box; color: rgb(51, 51, 51);">d3</span>.<span style="box-sizing: border-box; color: rgb(121, 93, 163);">selectAll</span>(<span style="box-sizing: border-box; color: rgb(24, 54, 145);"><span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span>tr<span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span></span>).<span style="box-sizing: border-box; color: rgb(121, 93, 163);">filter</span>(<span style="box-sizing: border-box; color: rgb(167, 29, 93);">function</span>(<span style="box-sizing: border-box; color: rgb(51, 51, 51);">d</span>, <span style="box-sizing: border-box; color: rgb(51, 51, 51);">i</span>) { <span style="box-sizing: border-box; color: rgb(167, 29, 93);">return</span> i <span style="box-sizing: border-box; color: rgb(167, 29, 93);">&amp;</span> <span style="box-sizing: border-box; color: rgb(0, 134, 179);">1</span>; });</font></pre><div style="text-align: start;"><font style="font-size: 18px;"><span>Or using </span><a style="font-style: italic;" href="https://github.com/d3/d3-selection#selection_select">selection</a><a href="https://github.com/d3/d3-selection#selection_select">.select</a><span>:</span></font></div><div><font style="font-size: 18px;"><br/></font></div><pre style="color: rgb(36, 41, 46); font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace; text-align: start; background-color: rgb(246, 248, 250);"><font style="font-size: 18px;"><span style="box-sizing: border-box; color: rgb(167, 29, 93);">var</span> even <span style="box-sizing: border-box; color: rgb(167, 29, 93);">=</span> <span style="box-sizing: border-box; color: rgb(51, 51, 51);">d3</span>.<span style="box-sizing: border-box; color: rgb(121, 93, 163);">selectAll</span>(<span style="box-sizing: border-box; color: rgb(24, 54, 145);"><span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span>tr<span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span></span>).<span style="box-sizing: border-box; color: rgb(0, 134, 179);">select</span>(<span style="box-sizing: border-box; color: rgb(167, 29, 93);">function</span>(<span style="box-sizing: border-box; color: rgb(51, 51, 51);">d</span>, <span style="box-sizing: border-box; color: rgb(51, 51, 51);">i</span>) { <span style="box-sizing: border-box; color: rgb(167, 29, 93);">return</span> i <span style="box-sizing: border-box; color: rgb(167, 29, 93);">&amp;</span> <span style="box-sizing: border-box; color: rgb(0, 134, 179);">1</span> <span style="box-sizing: border-box; color: rgb(167, 29, 93);">?</span> <span style="box-sizing: border-box; color: rgb(0, 134, 179);">this</span> <span style="box-sizing: border-box; color: rgb(167, 29, 93);">:</span> <span style="box-sizing: border-box; color: rgb(0, 134, 179);">null</span>; });</font></pre><div style="text-align: start;"><font style="font-size: 18px;"><span>Note that the </span><span>:nth-child</span><span> pseudo-class is a one-based index rather than a zero-based index. </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>Also, the above filter functions do not have precisely the same meaning as </span><span>:nth-child</span><span>; </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>they rely on the selection index rather than the number of preceding sibling elements in the DOM.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>The returned filtered selection preserves the parents of this selection, </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>but like </span><a style="font-style: italic;" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter">array</a><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter">.filter</a><span>, it does not preserve indexes as some elements may be removed;</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>use </span><a style="font-style: italic;" href="https://github.com/d3/d3-selection#selection_select">selection</a><a href="https://github.com/d3/d3-selection#selection_select">.select</a><span> to preserve the index, if needed.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div><span><font style="font-size: 18px;"><br/></font></span></div><div><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#selection_merge">#</a><span> </span><span style="font-style: italic;">selection</span><span>.</span><span style="font-weight: bold;">merge</span><span>(</span><span style="font-style: italic;">other</span><span>) </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/selection/merge.js">&lt;&gt;</a></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>Returns a new selection merging this selection with the specified </span><span style="font-style: italic;">other</span><span> selection. </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>The returned selection has the same number of groups and the same parents as this selection. </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>Any missing (null) elements in this selection are filled with the corresponding element, if present (not null), from the specified </span><span style="font-style: italic;">selection</span><span>. </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>(If the </span><span style="font-style: italic;">other</span><span> selection has additional groups or parents, they are ignored.)</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>This method is commonly used to merge the </span><a href="https://github.com/d3/d3-selection#selection_enter">enter</a><span> and </span><a href="https://github.com/d3/d3-selection#selection_data">update</a><span> selections after a </span><a href="https://github.com/d3/d3-selection#joining-data">data-join</a><span>. </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>After modifying the entering and updating elements separately, you can merge the two selections and perform operations on both without duplicate code. </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>For example:</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>var</span><span> circle </span><span>=</span><span> </span><span>svg</span><span>.</span><span>selectAll</span><span>(</span><span>&quot;</span><span>circle</span><span>&quot;</span><span>).</span><span>data</span><span>(data) </span><span>//</span><span> UPDATE</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>    .</span><span>style</span><span>(</span><span>&quot;</span><span>fill</span><span>&quot;</span><span>, </span><span>&quot;</span><span>blue</span><span>&quot;</span><span>);</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>circle</span><span>.</span><span>exit</span><span>().</span><span>remove</span><span>(); </span><span>//</span><span> EXIT</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>circle</span><span>.</span><span>enter</span><span>().</span><span>append</span><span>(</span><span>&quot;</span><span>circle</span><span>&quot;</span><span>) </span><span>//</span><span> ENTER</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>    .</span><span>style</span><span>(</span><span>&quot;</span><span>fill</span><span>&quot;</span><span>, </span><span>&quot;</span><span>green</span><span>&quot;</span><span>)</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  .</span><span>merge</span><span>(circle) </span><span>//</span><span> ENTER + UPDATE</span></font></div><div style="text-align: start;"><font><span style="font-size: 18px;">    .</span><span style="font-size: 18px;">style</span><span style="font-size: 18px;">(</span><span style="font-size: 18px;">&quot;</span><span style="font-size: 18px;">stroke</span><span style="font-size: 18px;">&quot;</span><span style="font-size: 18px;">, </span><span style="font-size: 18px;">&quot;</span><span style="font-size: 18px;">black”);</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span><br/></span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>See </span><a style="font-style: italic;" href="https://github.com/d3/d3-selection#selection_data">selection</a><a href="https://github.com/d3/d3-selection#selection_data">.data</a><span> for a more complete explanation of this code, which is known as the general update pattern.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>This method is not intended for concatenating arbitrary selections, </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>however: if both this selection and the specified </span><span style="font-style: italic;">other</span><span> selection have (non-null) elements at the same index, this selection’s element is returned in the merge and the </span><span style="font-style: italic;">other</span><span> selection’s element is ignored.</span></font></div><div><br/></div><div><span><font style="font-size: 18px;"><br/></font></span></div><div><span><font style="font-size: 18px;"><br/></font></span></div><div><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#matcher">#</a><span> d3.</span><span style="font-weight: bold;">matcher</span><span>(</span><span style="font-style: italic;">selector</span><span>) </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/matcher.js">&lt;&gt;</a></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>Given the specified </span><span style="font-style: italic;">selector</span><span>, returns a function which returns true if </span><span>this</span><span> element </span><a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/matches">matches</a><span> the specified selector. </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>This method is used internally by </span><a style="font-style: italic;" href="https://github.com/d3/d3-selection#selection_filter">selection</a><a href="https://github.com/d3/d3-selection#selection_filter">.filter</a><span>. For example, this:</span></font></div><div><font style="font-size: 18px;"><br/></font></div><pre style="color: rgb(36, 41, 46); font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace; text-align: start; background-color: rgb(246, 248, 250);"><font style="font-size: 18px;"><span style="box-sizing: border-box; color: rgb(167, 29, 93);">var</span> div <span style="box-sizing: border-box; color: rgb(167, 29, 93);">=</span> <span style="box-sizing: border-box; color: rgb(51, 51, 51);">selection</span>.<span style="box-sizing: border-box; color: rgb(121, 93, 163);">filter</span>(<span style="box-sizing: border-box; color: rgb(24, 54, 145);"><span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span>div<span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span></span>);</font></pre><div style="text-align: start;"><span><font style="font-size: 18px;">Is equivalent to:</font></span></div><div><font style="font-size: 18px;"><br/></font></div><pre style="color: rgb(36, 41, 46); font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace; text-align: start; background-color: rgb(246, 248, 250);"><font style="font-size: 18px;"><span style="box-sizing: border-box; color: rgb(167, 29, 93);">var</span> div <span style="box-sizing: border-box; color: rgb(167, 29, 93);">=</span> <span style="box-sizing: border-box; color: rgb(51, 51, 51);">selection</span>.<span style="box-sizing: border-box; color: rgb(121, 93, 163);">filter</span>(<span style="box-sizing: border-box; color: rgb(51, 51, 51);">d3</span>.<span style="box-sizing: border-box; color: rgb(121, 93, 163);">matcher</span>(<span style="box-sizing: border-box; color: rgb(24, 54, 145);"><span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span>div<span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span></span>));</font></pre><div style="text-align: start;"><font style="font-size: 18px;"><span>(Although D3 is not a compatibility layer, this implementation does support vendor-prefixed implementations due to the recent standardization of </span><span style="font-style: italic;">element</span><span>.matches.)</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div><span><font style="font-size: 18px;"><br/></font></span></div><div><span><font style="font-size: 18px;"><br/></font></span></div><div><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#window">#</a><span> d3.</span><span style="font-weight: bold;">window</span><span>(</span><span style="font-style: italic;">node</span><span>) </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/window.js">&lt;&gt;</a></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>Returns the owner window for the specified </span><span style="font-style: italic;">node</span><span>. If </span><span style="font-style: italic;">node</span><span> is a node, returns the owner document’s default view; if </span><span style="font-style: italic;">node</span><span> is a document, returns its default view; otherwise returns the </span><span style="font-style: italic;">node</span><span>.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#style">#</a><span> d3.</span><span style="font-weight: bold;">style</span><span>(</span><span style="font-style: italic;">node</span><span>, </span><span style="font-style: italic;">name</span><span>) </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/selection/style.js#L32">&lt;&gt;</a></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>Returns the value of the style property with the specified </span><span style="font-style: italic;">name</span><span> for the specified </span><span style="font-style: italic;">node</span><span>. If the </span><span style="font-style: italic;">node</span><span> has an inline style with the specified </span><span style="font-style: italic;">name</span><span>, its value is returned; otherwise, the </span><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/computed_value">computed property value</a><span> is returned. See also </span><a style="font-style: italic;" href="https://github.com/d3/d3-selection#selection_style">selection</a><a href="https://github.com/d3/d3-selection#selection_style">.style</a><span>.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div><span><font style="font-size: 18px;"><br/></font></span></div><div><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#selection_attr">#</a> <span style="font-style: italic;">selection</span>.<span style="font-weight: bold;">attr</span>(<span style="font-style: italic;">name</span>[, <span style="font-style: italic;">value</span>]) <a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/selection/attr.js">&lt;&gt;</a></font></div><div><span><font style="font-size: 18px;"><br/></font></span></div><div><font style="font-size: 18px;"><span>d3</span><span>.</span><span>select</span><span>(</span><span>&quot;</span><span>a</span><span>&quot;</span><span>)</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>    .</span><span>attr</span><span>(</span><span>&quot;</span><span>name</span><span>&quot;</span><span>, </span><span>&quot;</span><span>fred</span><span>&quot;</span><span>)</span></font></div><div><font style="font-size: 18px;"><span>    .</span><span>style</span><span>(</span><span>&quot;</span><span>color</span><span>&quot;</span><span>, </span><span>&quot;</span><span>red</span><span>&quot;</span><span>);</span></font></div><div><span><font style="font-size: 18px;"><br/></font></span></div><div><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#selection_classed">#</a> <span style="font-style: italic;">selection</span>.<span style="font-weight: bold;">classed</span>(<span style="font-style: italic;">names</span>[, <span style="font-style: italic;">value</span>]) <a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/selection/classed.js">&lt;&gt;</a></font></div><div><span><font style="font-size: 18px;"><br/></font></span></div><div><font style="font-size: 18px;"><span>If a </span><span style="font-style: italic;">value</span><span> is specified, assigns or unassigns the specified CSS class </span><span style="font-style: italic;">names</span><span> on the selected elements by setting the </span><span>class</span><span> attribute or modifying the </span><span>classList</span><span> property and returns this selection. </span></font></div><div><font style="font-size: 18px;"><span>The specified </span><span style="font-style: italic;">names</span><span> is a string of space-separated class names. For example, to assign the classes </span><span>foo</span><span> and </span><span>bar</span><span> to the selected elements:</span></font></div><div><font style="font-size: 18px;"><br/></font></div><pre style="color: rgb(36, 41, 46); font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace; text-align: start; background-color: rgb(246, 248, 250);"><font style="font-size: 18px;"><span style="box-sizing: border-box; color: rgb(51, 51, 51);">selection</span>.<span style="box-sizing: border-box; color: rgb(121, 93, 163);">classed</span>(<span style="box-sizing: border-box; color: rgb(24, 54, 145);"><span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span>foo bar<span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span></span>, <span style="box-sizing: border-box; color: rgb(0, 134, 179);">true</span>);</font></pre><div style="text-align: start;"><font style="font-size: 18px;"><span>If the </span><span style="font-style: italic;">value</span><span> is truthy, then all elements are assigned the specified classes; otherwise, the classes are unassigned. </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>If the </span><span style="font-style: italic;">value</span><span> is a function, it is evaluated for each selected element, in order, being passed the current datum (</span><span style="font-style: italic;">d</span><span>), the current index (</span><span style="font-style: italic;">i</span><span>), and the current group (</span><span style="font-style: italic;">nodes</span><span>), with </span><span style="font-style: italic;">this</span><span> as the current DOM element (</span><span style="font-style: italic;">nodes</span><span>[</span><span style="font-style: italic;">i</span><span>]). </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>The function’s return value is then used to assign or unassign classes on each element. </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>For example, to randomly associate the class </span><span style="font-style: italic;">foo</span><span> with on average half the selected elements:</span></font></div><div><font style="font-size: 18px;"><br/></font></div><pre style="color: rgb(36, 41, 46); font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace; text-align: start; background-color: rgb(246, 248, 250);"><font style="font-size: 18px;"><span style="box-sizing: border-box; color: rgb(51, 51, 51);">selection</span>.<span style="box-sizing: border-box; color: rgb(121, 93, 163);">classed</span>(<span style="box-sizing: border-box; color: rgb(24, 54, 145);"><span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span>foo<span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span></span>, <span style="box-sizing: border-box; color: rgb(167, 29, 93);">function</span>() { <span style="box-sizing: border-box; color: rgb(167, 29, 93);">return</span> <span style="box-sizing: border-box; color: rgb(0, 134, 179);">Math</span>.<span style="box-sizing: border-box; color: rgb(0, 134, 179);">random</span>() <span style="box-sizing: border-box; color: rgb(167, 29, 93);">&gt;</span> <span style="box-sizing: border-box; color: rgb(0, 134, 179);">0.5</span>; });</font></pre><div style="text-align: start;"><font style="font-size: 18px;"><span>If a </span><span style="font-style: italic;">value</span><span> is not specified, returns true if and only if the first (non-null) selected element has the specified </span><span style="font-style: italic;">classes</span><span>. </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>This is generally useful only if you know the selection contains exactly one element.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div><span><font style="font-size: 18px;"><br/></font></span></div><div><font style="font-size: 18px;"><a href="https://github.com/d3/d3-selection#selection_style">#</a> <span style="font-style: italic;">selection</span>.<span style="font-weight: bold;">style</span>(<span style="font-style: italic;">name</span>[, <span style="font-style: italic;">value</span>[, <span style="font-style: italic;">priority</span>]]) <a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/selection/style.js">&lt;&gt;</a></font></div><div><span><font style="font-size: 18px;"><br/></font></span></div><div><font style="font-size: 18px;"><a href="https://github.com/d3/d3-selection#selection_property">#</a><span> </span><span style="font-style: italic;">selection</span><span>.</span><span style="font-weight: bold;">property</span><span>(</span><span style="font-style: italic;">name</span><span>[, </span><span style="font-style: italic;">value</span><span>]) </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/selection/property.js">&lt;&gt;</a></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>Some HTML elements have special properties that are not addressable using attributes or styles, </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>such as a form field’s text </span><span>value</span><span> and a checkbox’s </span><span>checked</span><span> boolean. </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>Use this method to get or set these properties.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>If a </span><span style="font-style: italic;">value</span><span> is specified, sets the property with the specified </span><span style="font-style: italic;">name</span><span> to the specified value on selected elements. </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>If the </span><span style="font-style: italic;">value</span><span> is a constant, then all elements are given the same property value; </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>otherwise, if the </span><span style="font-style: italic;">value</span><span> is a function, it is evaluated for each selected element, in order, being passed the current datum (</span><span style="font-style: italic;">d</span><span>), the current index (</span><span style="font-style: italic;">i</span><span>), and the current group (</span><span style="font-style: italic;">nodes</span><span>), with </span><span style="font-style: italic;">this</span><span> as the current DOM element (</span><span style="font-style: italic;">nodes</span><span>[</span><span style="font-style: italic;">i</span><span>]). </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>The function’s return value is then used to set each element’s property. </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>A null value will delete the specified property.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>If a </span><span style="font-style: italic;">value</span><span> is not specified, returns the value of the specified property for the first (non-null) element in the selection. </span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>This is generally useful only if you know the selection contains exactly one element.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div><span><font style="font-size: 18px;"><br/></font></span></div><div><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#selection_text">#</a> <span style="font-style: italic;">selection</span>.<span style="font-weight: bold;">text</span>([<span style="font-style: italic;">value</span>]) <a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/selection/text.js">&lt;&gt;</a></font></div><div><span><font style="font-size: 18px;"><br/></font></span></div><div><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#selection_html">#</a> <span style="font-style: italic;">selection</span>.<span style="font-weight: bold;">html</span>([<span style="font-style: italic;">value</span>]) <a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/selection/html.js">&lt;&gt;</a></font></div><div><span><font style="font-size: 18px;"><br/></font></span></div><div><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#selection_append">#</a><span> </span><span style="font-style: italic;">selection</span><span>.</span><span style="font-weight: bold;">append</span><span>(</span><span style="font-style: italic;">type</span><span>) </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/selection/append.js">&lt;&gt;</a></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>If the specified </span><span style="font-style: italic;">type</span><span> is a string, appends a new element of this type (tag name) as the last child of each selected element, or before the next following sibling in the update selection if this is an </span><a href="https://github.com/d3/d3-selection#selection_enter">enter selection</a><span>. The latter behavior for enter selections allows you to insert elements into the DOM in an order consistent with the new bound data; however, note that </span><a style="font-style: italic;" href="https://github.com/d3/d3-selection#selection_order">selection</a><a href="https://github.com/d3/d3-selection#selection_order">.order</a><span> may still be required if updating elements change order (</span><span style="font-style: italic;">i.e.</span><span>, if the order of new data is inconsistent with old data).</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>If the specified </span><span style="font-style: italic;">type</span><span> is a function, it is evaluated for each selected element, in order, being passed the current datum (</span><span style="font-style: italic;">d</span><span>), the current index (</span><span style="font-style: italic;">i</span><span>), and the current group (</span><span style="font-style: italic;">nodes</span><span>), with </span><span style="font-style: italic;">this</span><span> as the current DOM element (</span><span style="font-style: italic;">nodes</span><span>[</span><span style="font-style: italic;">i</span><span>]). This function should return an element to be appended. (The function typically creates a new element, but it may instead return an existing element.) For example, to append a DIV element to each paragraph:</span></font></div><div><font style="font-size: 18px;"><br/></font></div><pre style="color: rgb(36, 41, 46); font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace; text-align: start; background-color: rgb(246, 248, 250);"><font style="font-size: 18px;"><span style="box-sizing: border-box; color: rgb(51, 51, 51);">d3</span>.<span style="box-sizing: border-box; color: rgb(121, 93, 163);">selectAll</span>(<span style="box-sizing: border-box; color: rgb(24, 54, 145);"><span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span>p<span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span></span>).<span style="box-sizing: border-box; color: rgb(0, 134, 179);">append</span>(<span style="box-sizing: border-box; color: rgb(24, 54, 145);"><span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span>div<span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span></span>);</font></pre><div style="text-align: start;"><span><font style="font-size: 18px;">This is equivalent to:</font></span></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>d3</span><span>.</span><span>selectAll</span><span>(</span><span>&quot;</span><span>p</span><span>&quot;</span><span>).</span><span>append</span><span>(</span><span>function</span><span>() {</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  </span><span>return</span><span> </span><span>document</span><span>.</span><span>createElement</span><span>(</span><span>&quot;</span><span>div</span><span>&quot;</span><span>);</span></font></div><div style="text-align: start;"><span><font style="font-size: 18px;">});</font></span></div><div style="text-align: start;"><span><font style="font-size: 18px;">Which is equivalent to:</font></span></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>d3</span><span>.</span><span>selectAll</span><span>(</span><span>&quot;</span><span>p</span><span>&quot;</span><span>).</span><span>select</span><span>(</span><span>function</span><span>() {</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  </span><span>return</span><span> </span><span>this</span><span>.</span><span>appendChild</span><span>(</span><span>document</span><span>.</span><span>createElement</span><span>(</span><span>&quot;</span><span>div</span><span>&quot;</span><span>));</span></font></div><div><span><font style="font-size: 18px;">});</font></span></div><div><font style="font-size: 18px;"><br/></font></div><div><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#selection_insert">#</a> <span style="font-style: italic;">selection</span>.<span style="font-weight: bold;">insert</span>(<span style="font-style: italic;">type</span>[, <span style="font-style: italic;">before</span>]) <a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/selection/insert.js">&lt;&gt;</a></font></div><div><br/></div><div><font style="font-size: 18px;"><span>If the specified </span><span style="font-style: italic;">type</span><span> is a string, inserts a new element of this type (tag name) before the first element matching the specified </span><span style="font-style: italic;">before</span><span> selector for each selected element. For example, a </span><span style="font-style: italic;">before</span><span> selector </span><span>:first-child</span><span> will prepend nodes before the first child. If </span><span style="font-style: italic;">before</span><span> is not specified, it defaults to null. (To append elements in an order consistent with </span><a href="https://github.com/d3/d3-selection#joining-data">bound data</a><span>, use </span><a style="font-style: italic;" href="https://github.com/d3/d3-selection#selection_append">selection</a><a href="https://github.com/d3/d3-selection#selection_append">.append</a><span>.)</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>Both </span><span style="font-style: italic;">type</span><span> and </span><span style="font-style: italic;">before</span><span> may instead be specified as functions which are evaluated for each selected element, in order, being passed the current datum (</span><span style="font-style: italic;">d</span><span>), the current index (</span><span style="font-style: italic;">i</span><span>), and the current group (</span><span style="font-style: italic;">nodes</span><span>), with </span><span style="font-style: italic;">this</span><span> as the current DOM element (</span><span style="font-style: italic;">nodes</span><span>[</span><span style="font-style: italic;">i</span><span>]). The </span><span style="font-style: italic;">type</span><span> function should return an element to be inserted; the </span><span style="font-style: italic;">before</span><span> function should return the child element before which the element should be inserted. For example, to append a DIV element to each paragraph:</span></font></div><div><font style="font-size: 18px;"><br/></font></div><pre style="color: rgb(36, 41, 46); font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace; text-align: start; background-color: rgb(246, 248, 250);"><font style="font-size: 18px;"><span style="box-sizing: border-box; color: rgb(51, 51, 51);">d3</span>.<span style="box-sizing: border-box; color: rgb(121, 93, 163);">selectAll</span>(<span style="box-sizing: border-box; color: rgb(24, 54, 145);"><span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span>p<span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span></span>).<span style="box-sizing: border-box; color: rgb(121, 93, 163);">insert</span>(<span style="box-sizing: border-box; color: rgb(24, 54, 145);"><span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span>div<span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span></span>);</font></pre><div style="text-align: start;"><span><font style="font-size: 18px;">This is equivalent to:</font></span></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>d3</span><span>.</span><span>selectAll</span><span>(</span><span>&quot;</span><span>p</span><span>&quot;</span><span>).</span><span>insert</span><span>(</span><span>function</span><span>() {</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  </span><span>return</span><span> </span><span>document</span><span>.</span><span>createElement</span><span>(</span><span>&quot;</span><span>div</span><span>&quot;</span><span>);</span></font></div><div style="text-align: start;"><span><font style="font-size: 18px;">});</font></span></div><div style="text-align: start;"><span><font style="font-size: 18px;">Which is equivalent to:</font></span></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>d3</span><span>.</span><span>selectAll</span><span>(</span><span>&quot;</span><span>p</span><span>&quot;</span><span>).</span><span>select</span><span>(</span><span>function</span><span>() {</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  </span><span>return</span><span> </span><span>this</span><span>.</span><span>insertBefore</span><span>(</span><span>document</span><span>.</span><span>createElement</span><span>(</span><span>&quot;</span><span>div</span><span>&quot;</span><span>), </span><span>null</span><span>);</span></font></div><div><span><font style="font-size: 18px;">});</font></span></div><div><font style="font-size: 18px;"><br/></font></div><div><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#selection_remove">#</a> <span style="font-style: italic;">selection</span>.<span style="font-weight: bold;">remove</span>() <a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/selection/remove.js">&lt;&gt;</a></font></div><div><font style="font-size: 18px;"><br/></font></div><div><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#selection_sort">#</a><span> </span><span style="font-style: italic;">selection</span><span>.</span><span style="font-weight: bold;">sort</span><span>(</span><span style="font-style: italic;">compare</span><span>) </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/selection/sort.js">&lt;&gt;</a></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>Returns a new selection that contains a copy of each group in this selection sorted according to the </span><span style="font-style: italic;">compare</span><span> function. After sorting, re-inserts elements to match the resulting order (per </span><a style="font-style: italic;" href="https://github.com/d3/d3-selection#selection_order">selection</a><a href="https://github.com/d3/d3-selection#selection_order">.order</a><span>).</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>The compare function, which defaults to </span><a href="https://github.com/d3/d3-array#ascending">ascending</a><span>, is passed two elements’ data </span><span style="font-style: italic;">a</span><span> and </span><span style="font-style: italic;">b</span><span> to compare. It should return either a negative, positive, or zero value. If negative, then </span><span style="font-style: italic;">a</span><span> should be before </span><span style="font-style: italic;">b</span><span>; if positive, then </span><span style="font-style: italic;">a</span><span> should be after </span><span style="font-style: italic;">b</span><span>; otherwise, </span><span style="font-style: italic;">a</span><span> and </span><span style="font-style: italic;">b</span><span> are considered equal and the order is arbitrary.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>Note that sorting is not guaranteed to be stable; however, it is guaranteed to have the same behavior as your browser’s built-in </span><a href="https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/sort">sort</a><span> method on arrays.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#selection_order">#</a><span> </span><span style="font-style: italic;">selection</span><span>.</span><span style="font-weight: bold;">order</span><span>() </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/selection/order.js">&lt;&gt;</a></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>Re-inserts elements into the document such that the document order of each group matches the selection order. This is equivalent to calling </span><a style="font-style: italic;" href="https://github.com/d3/d3-selection#selection_sort">selection</a><a href="https://github.com/d3/d3-selection#selection_sort">.sort</a><span> if the data is already sorted, but much faster.</span></font></div><div><br/></div><div><br/></div><div><font style="font-size: 18px;"><br/></font></div><div><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#selection_raise">#</a><span> </span><span style="font-style: italic;">selection</span><span>.</span><span style="font-weight: bold;">raise</span><span>() </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/selection/raise.js">&lt;&gt;</a></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><span><font style="font-size: 18px;">Re-inserts each selected element, in order, as the last child of its parent. Equivalent to:</font></span></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>selection</span><span>.</span><span>each</span><span>(</span><span>function</span><span>() {</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  </span><span>this</span><span>.</span><span>parentNode</span><span>.</span><span>appendChild</span><span>(</span><span>this</span><span>);</span></font></div><div style="text-align: start;"><span><font style="font-size: 18px;">});</font></span></div><div style="text-align: start;"><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#selection_lower">#</a><span> </span><span style="font-style: italic;">selection</span><span>.</span><span style="font-weight: bold;">lower</span><span>() </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/selection/lower.js">&lt;&gt;</a></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><span><font style="font-size: 18px;">Re-inserts each selected element, in order, as the first child of its parent. Equivalent to:</font></span></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>selection</span><span>.</span><span>each</span><span>(</span><span>function</span><span>() {</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  </span><span>this</span><span>.</span><span>parentNode</span><span>.</span><span>insertBefore</span><span>(</span><span>this</span><span>, </span><span>this</span><span>.</span><span>parentNode</span><span>.</span><span>firstChild</span><span>);</span></font></div><div style="text-align: start;"><span><font style="font-size: 18px;">});</font></span></div><div style="text-align: start;"><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#creator">#</a><span> d3.</span><span style="font-weight: bold;">creator</span><span>(</span><span style="font-style: italic;">name</span><span>) </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/creator.js">&lt;&gt;</a></font></div><div><br/></div><div><br/></div><div><font style="font-size: 18px;"><br/></font></div><div><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#selection_data">#</a><span> </span><span style="font-style: italic;">selection</span><span>.</span><span style="font-weight: bold;">data</span><span>([</span><span style="font-style: italic;">data</span><span>[, </span><span style="font-style: italic;">key</span><span>]]) </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/selection/data.js">&lt;&gt;</a></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>Joins the specified array of </span><span style="font-style: italic;">data</span><span> with the selected elements, returning a new selection that represents the </span><span style="font-style: italic;">update</span><span> selection: the elements successfully bound to data. Also defines the </span><a href="https://github.com/d3/d3-selection#selection_enter">enter</a><span> and </span><a href="https://github.com/d3/d3-selection#selection_exit">exit</a><span> selections on the returned selection, which can be used to add or remove elements to correspond to the new data. The specified </span><span style="font-style: italic;">data</span><span> is an array of arbitrary values (</span><span style="font-style: italic;">e.g.</span><span>, numbers or objects), or a function that returns an array of values for each group. When data is assigned to an element, it is stored in the property </span><span>__data__</span><span>, thus making the data “sticky” and available on re-selection.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>The </span><span style="font-style: italic;">data</span><span> is specified </span><span style="font-weight: bold;">for each group</span><span> in the selection. If the selection has multiple groups (such as </span><a href="https://github.com/d3/d3-selection#selectAll">d3.selectAll</a><span> followed by </span><a style="font-style: italic;" href="https://github.com/d3/d3-selection#selection_selectAll">selection</a><a href="https://github.com/d3/d3-selection#selection_selectAll">.selectAll</a><span>), then </span><span style="font-style: italic;">data</span><span> should typically be specified as a function. This function will be evaluated for each group in order, being passed the group’s parent datum (</span><span style="font-style: italic;">d</span><span>, which may be undefined), the group index (</span><span style="font-style: italic;">i</span><span>), and the selection’s parent nodes (</span><span style="font-style: italic;">nodes</span><span>), with </span><span style="font-style: italic;">this</span><span> as the group’s parent element. For example, to create an HTML table from a matrix of numbers:</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>var</span><span> matrix </span><span>=</span><span> [</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  [</span><span>11975</span><span>,  </span><span>5871</span><span>, </span><span>8916</span><span>, </span><span>2868</span><span>],</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  [ </span><span>1951</span><span>, </span><span>10048</span><span>, </span><span>2060</span><span>, </span><span>6171</span><span>],</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  [ </span><span>8010</span><span>, </span><span>16145</span><span>, </span><span>8090</span><span>, </span><span>8045</span><span>],</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  [ </span><span>1013</span><span>,   </span><span>990</span><span>,  </span><span>940</span><span>, </span><span>6907</span><span>]</span></font></div><div style="text-align: start;"><span><font style="font-size: 18px;">];</font></span></div><div style="text-align: start;"><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>var</span><span> tr </span><span>=</span><span> </span><span>d3</span><span>.</span><span>select</span><span>(</span><span>&quot;</span><span>body</span><span>&quot;</span><span>)</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  .</span><span>append</span><span>(</span><span>&quot;</span><span>table</span><span>&quot;</span><span>)</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  .</span><span>selectAll</span><span>(</span><span>&quot;</span><span>tr</span><span>&quot;</span><span>)</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  .</span><span>data</span><span>(matrix)</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  .</span><span>enter</span><span>().</span><span>append</span><span>(</span><span>&quot;</span><span>tr</span><span>&quot;</span><span>);</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>var</span><span> td </span><span>=</span><span> </span><span>tr</span><span>.</span><span>selectAll</span><span>(</span><span>&quot;</span><span>td</span><span>&quot;</span><span>)</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  .</span><span>data</span><span>(</span><span>function</span><span>(</span><span>d</span><span>) { </span><span>return</span><span> d; })</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  .</span><span>enter</span><span>().</span><span>append</span><span>(</span><span>&quot;</span><span>td</span><span>&quot;</span><span>)</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>    .</span><span>text</span><span>(</span><span>function</span><span>(</span><span>d</span><span>) { </span><span>return</span><span> d; });</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>In this example the </span><span style="font-style: italic;">data</span><span> function is the identity function: for each table row, it returns the corresponding row from the data matrix.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>If a </span><span style="font-style: italic;">key</span><span> function is not specified, then the first datum in </span><span style="font-style: italic;">data</span><span> is assigned to the first selected element, the second datum to the second selected element, and so on. A </span><span style="font-style: italic;">key</span><span> function may be specified to control which datum is assigned to which element, replacing the default join-by-index. This key function is evaluated for each selected element, in order, being passed the current datum (</span><span style="font-style: italic;">d</span><span>), the current index (</span><span style="font-style: italic;">i</span><span>), and the current group (</span><span style="font-style: italic;">nodes</span><span>), with </span><span style="font-style: italic;">this</span><span> as the current DOM element (</span><span style="font-style: italic;">nodes</span><span>[</span><span style="font-style: italic;">i</span><span>]). The key function is then also evaluated for each new datum in </span><span style="font-style: italic;">data</span><span>, being passed the current datum (</span><span style="font-style: italic;">d</span><span>), the current index (</span><span style="font-style: italic;">i</span><span>), and the group’s new </span><span style="font-style: italic;">data</span><span>, with </span><span style="font-style: italic;">this</span><span> as the group’s parent DOM element. The datum for a given key is assigned to the element with the matching key. If multiple elements have the same key, the duplicate elements are put into the exit selection; if multiple data have the same key, the duplicate data are put into the enter selection.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><span><font style="font-size: 18px;">For example, given this document:</font></span></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>&lt;</span><span>div</span><span> </span><span>id</span><span>=</span><span>&quot;</span><span>Ford</span><span>&quot;</span><span>&gt;&lt;/</span><span>div</span><span>&gt;</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>&lt;</span><span>div</span><span> </span><span>id</span><span>=</span><span>&quot;</span><span>Jarrah</span><span>&quot;</span><span>&gt;&lt;/</span><span>div</span><span>&gt;</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>&lt;</span><span>div</span><span> </span><span>id</span><span>=</span><span>&quot;</span><span>Kwon</span><span>&quot;</span><span>&gt;&lt;/</span><span>div</span><span>&gt;</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>&lt;</span><span>div</span><span> </span><span>id</span><span>=</span><span>&quot;</span><span>Locke</span><span>&quot;</span><span>&gt;&lt;/</span><span>div</span><span>&gt;</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>&lt;</span><span>div</span><span> </span><span>id</span><span>=</span><span>&quot;</span><span>Reyes</span><span>&quot;</span><span>&gt;&lt;/</span><span>div</span><span>&gt;</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>&lt;</span><span>div</span><span> </span><span>id</span><span>=</span><span>&quot;</span><span>Shephard</span><span>&quot;</span><span>&gt;&lt;/</span><span>div</span><span>&gt;</span></font></div><div style="text-align: start;"><span><font style="font-size: 18px;">You could join data by key as follows:</font></span></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>var</span><span> data </span><span>=</span><span> [</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  {name</span><span>:</span><span> </span><span>&quot;</span><span>Locke</span><span>&quot;</span><span>, number</span><span>:</span><span> </span><span>4</span><span>},</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  {name</span><span>:</span><span> </span><span>&quot;</span><span>Reyes</span><span>&quot;</span><span>, number</span><span>:</span><span> </span><span>8</span><span>},</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  {name</span><span>:</span><span> </span><span>&quot;</span><span>Ford</span><span>&quot;</span><span>, number</span><span>:</span><span> </span><span>15</span><span>},</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  {name</span><span>:</span><span> </span><span>&quot;</span><span>Jarrah</span><span>&quot;</span><span>, number</span><span>:</span><span> </span><span>16</span><span>},</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  {name</span><span>:</span><span> </span><span>&quot;</span><span>Shephard</span><span>&quot;</span><span>, number</span><span>:</span><span> </span><span>31</span><span>},</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  {name</span><span>:</span><span> </span><span>&quot;</span><span>Kwon</span><span>&quot;</span><span>, number</span><span>:</span><span> </span><span>34</span><span>}</span></font></div><div style="text-align: start;"><span><font style="font-size: 18px;">];</font></span></div><div style="text-align: start;"><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>d3</span><span>.</span><span>selectAll</span><span>(</span><span>&quot;</span><span>div</span><span>&quot;</span><span>)</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  .</span><span>data</span><span>(data, </span><span>function</span><span>(</span><span>d</span><span>) { </span><span>return</span><span> d </span><span>?</span><span> </span><span>d</span><span>.</span><span>name</span><span> </span><span>:</span><span> </span><span>this</span><span>.</span><span>id</span><span>; })</span></font></div><div><font style="font-size: 18px;"><span>    .</span><span>text</span><span>(</span><span>function</span><span>(</span><span>d</span><span>) { </span><span>return</span><span> </span><span>d</span><span>.</span><span>number</span><span>; });</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div><font style="font-size: 18px;"><br/></font></div><div><font style="font-size: 18px;"><span>This example key function uses the datum </span><span style="font-style: italic;">d</span><span> if present, and otherwise falls back to the element’s id property. Since these elements were not previously bound to data, the datum </span><span style="font-style: italic;">d</span><span> is null when the key function is evaluated on selected elements, and non-null when the key function is evaluated on the new data.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>The </span><span style="font-style: italic;">update</span><span> and </span><span style="font-style: italic;">enter</span><span> selections are returned in data order, while the </span><span style="font-style: italic;">exit</span><span> selection preserves the selection order prior to the join. If a key function is specified, the order of elements in the selection may not match their order in the document; use </span><a style="font-style: italic;" href="https://github.com/d3/d3-selection#order">selection</a><a href="https://github.com/d3/d3-selection#order">.order</a><span> or </span><a style="font-style: italic;" href="https://github.com/d3/d3-selection#sort">selection</a><a href="https://github.com/d3/d3-selection#sort">.sort</a><span> as needed. For more on how the key function affects the join, see </span><a href="http://bost.ocks.org/mike/bar/2/">A Bar Chart, Part 2</a><span> and </span><a href="http://bost.ocks.org/mike/constancy/">Object Constancy</a><span>.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>Although the data-join can be used simply to create (to </span><span style="font-style: italic;">enter</span><span>) a set of elements corresponding to data, more generally the data-join is designed to let you create, destroy or update elements as needed so that the resulting DOM corresponds to the new data. The data-join lets you do this efficiently by executing only the minimum necessary operations on each state of element (entering, updating, or exiting), and allows you to declare concise animated transitions between states as well. Here is a simple example of the </span><a href="http://bl.ocks.org/mbostock/3808218">General Update Pattern</a><span>:</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>var</span><span> circle </span><span>=</span><span> </span><span>svg</span><span>.</span><span>selectAll</span><span>(</span><span>&quot;</span><span>circle</span><span>&quot;</span><span>) </span><span>//</span><span> 1</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  .</span><span>data</span><span>(data) </span><span>//</span><span> 2</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>    .</span><span>style</span><span>(</span><span>&quot;</span><span>fill</span><span>&quot;</span><span>, </span><span>&quot;</span><span>blue</span><span>&quot;</span><span>); </span><span>//</span><span> 3</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>circle</span><span>.</span><span>exit</span><span>().</span><span>remove</span><span>(); </span><span>//</span><span> 4</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>circle</span><span>.</span><span>enter</span><span>().</span><span>append</span><span>(</span><span>&quot;</span><span>circle</span><span>&quot;</span><span>) </span><span>//</span><span> 5</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>    .</span><span>style</span><span>(</span><span>&quot;</span><span>fill</span><span>&quot;</span><span>, </span><span>&quot;</span><span>green</span><span>&quot;</span><span>) </span><span>//</span><span> 6</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  .</span><span>merge</span><span>(circle) </span><span>//</span><span> 7</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>    .</span><span>style</span><span>(</span><span>&quot;</span><span>stroke</span><span>&quot;</span><span>, </span><span>&quot;</span><span>black</span><span>&quot;</span><span>); </span><span>//</span><span> 8</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div><font style="font-size: 18px;"><br/></font></div><div><span><font style="font-size: 18px;">Breaking this down into discrete steps:</font></span></div><div><font style="font-size: 18px;"><br/></font></div><ol style="color: rgb(36, 41, 46); font-family: -apple-system, system-ui, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; text-align: start;"><li><font style="font-size: 18px;">Any existing circles (that are descendants of the <span style="font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace; background-color: rgba(27, 31, 35, 0.0470588);">svg</span> selection) are <a style="color: rgb(3, 102, 214);" href="https://github.com/d3/d3-selection#selection_selectAll">selected</a>.</font></li><li><font style="font-size: 18px;">These circles are <a style="color: rgb(3, 102, 214);" href="https://github.com/d3/d3-selection#selection_data">joined to new </a><a style="background-color: rgba(27, 31, 35, 0.0470588); color: rgb(3, 102, 214); font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace;" href="https://github.com/d3/d3-selection#selection_data">data</a>, returning the matching circles: the <span style="font-style: italic;">update</span> selection.</font></li><li><font style="font-size: 18px;">These updating circles are given a blue fill.</font></li><li><font style="font-size: 18px;">Any existing circles that do <span style="font-style: italic;">not</span> match new data—the <span style="font-style: italic;">exit</span> selection—are removed.</font></li><li><font style="font-size: 18px;">New circles are <a style="color: rgb(3, 102, 214);" href="https://github.com/d3/d3-selection#selection_append">appended</a> for any new data that do <span style="font-style: italic;">not</span> match any existing circle: the <span style="font-style: italic;">enter</span> selection.</font></li><li><font style="font-size: 18px;">These entering circles are given a green fill.</font></li><li><font style="font-size: 18px;">A new selection representing the <a style="color: rgb(3, 102, 214);" href="https://github.com/d3/d3-selection#selection_merge">union</a> of entering and updating circles is created.</font></li><li><font style="font-size: 18px;">These entering and updating circles are given a black stroke.</font></li></ol><div style="text-align: start;"><font style="font-size: 18px;"><span>As described in the preceding paragraphs, the “matching” logic is determined by the key function passed to </span><span style="font-style: italic;">selection</span><span>.data; since no key function is used in the above code sample, the elements and data are joined by index.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>If </span><span style="font-style: italic;">data</span><span> is not specified, this method returns the array of data for the selected elements.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>This method cannot be used to clear bound data; use </span><a style="font-style: italic;" href="https://github.com/d3/d3-selection#selection_datum">selection</a><a href="https://github.com/d3/d3-selection#selection_datum">.datum</a><span> instead.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div><font style="font-size: 18px;"><br/></font></div><div><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#selection_enter">#</a><span> </span><span style="font-style: italic;">selection</span><span>.</span><span style="font-weight: bold;">enter</span><span>() </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/selection/enter.js">&lt;&gt;</a></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>Returns the enter selection: placeholder nodes for each datum that had no corresponding DOM element in the selection. The enter selection is determined by </span><a style="font-style: italic;" href="https://github.com/d3/d3-selection#selection_data">selection</a><a href="https://github.com/d3/d3-selection#selection_data">.data</a><span>, and is empty on a selection that is not joined to data.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><span><font style="font-size: 18px;">The enter selection is typically used to create “missing” elements corresponding to new data. For example, to create DIV elements from an array of numbers:</font></span></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>var</span><span> div </span><span>=</span><span> </span><span>d3</span><span>.</span><span>select</span><span>(</span><span>&quot;</span><span>body</span><span>&quot;</span><span>)</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  .</span><span>selectAll</span><span>(</span><span>&quot;</span><span>div</span><span>&quot;</span><span>)</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  .</span><span>data</span><span>([</span><span>4</span><span>, </span><span>8</span><span>, </span><span>15</span><span>, </span><span>16</span><span>, </span><span>23</span><span>, </span><span>42</span><span>])</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  .</span><span>enter</span><span>().</span><span>append</span><span>(</span><span>&quot;</span><span>div</span><span>&quot;</span><span>)</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>    .</span><span>text</span><span>(</span><span>function</span><span>(</span><span>d</span><span>) { </span><span>return</span><span> d; });</span></font></div><div style="text-align: start;"><span><font style="font-size: 18px;">If the body is initially empty, the above code will create six new DIV elements, append them to the body in-order, and assign their text content as the associated (string-coerced) number:</font></span></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>&lt;</span><span>div</span><span>&gt;4&lt;/</span><span>div</span><span>&gt;</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>&lt;</span><span>div</span><span>&gt;8&lt;/</span><span>div</span><span>&gt;</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>&lt;</span><span>div</span><span>&gt;15&lt;/</span><span>div</span><span>&gt;</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>&lt;</span><span>div</span><span>&gt;16&lt;/</span><span>div</span><span>&gt;</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>&lt;</span><span>div</span><span>&gt;23&lt;/</span><span>div</span><span>&gt;</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>&lt;</span><span>div</span><span>&gt;42&lt;/</span><span>div</span><span>&gt;</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>Conceptually, the enter selection’s placeholders are pointers to the parent element (in this example, the document body). The enter selection is typically only used transiently to append elements, and is often </span><a href="https://github.com/d3/d3-selection#selection_merge">merged</a><span> with the update selection after appending, such that modifications can be applied to both entering and updating elements.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#selection_exit">#</a><span> </span><span style="font-style: italic;">selection</span><span>.</span><span style="font-weight: bold;">exit</span><span>() </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/selection/exit.js">&lt;&gt;</a></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>Returns the exit selection: existing DOM elements in the selection for which no new datum was found. The exit selection is determined by the previous </span><a style="font-style: italic;" href="https://github.com/d3/d3-selection#selection_data">selection</a><a href="https://github.com/d3/d3-selection#selection_data">.data</a><span>, and is thus empty until the selection is joined to data. If the exit selection is retrieved more than once after a data join, subsequent calls return the empty selection.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><span><font style="font-size: 18px;">The exit selection is typically used to remove “superfluous” elements corresponding to old data. For example, to update the DIV elements created previously with a new array of numbers:</font></span></div><div><font style="font-size: 18px;"><br/></font></div><pre style="color: rgb(36, 41, 46); font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace; text-align: start; background-color: rgb(246, 248, 250);"><font style="font-size: 18px;">div <span style="box-sizing: border-box; color: rgb(167, 29, 93);">=</span> <span style="box-sizing: border-box; color: rgb(51, 51, 51);">div</span>.<span style="box-sizing: border-box; color: rgb(0, 134, 179);">data</span>([<span style="box-sizing: border-box; color: rgb(0, 134, 179);">1</span>, <span style="box-sizing: border-box; color: rgb(0, 134, 179);">2</span>, <span style="box-sizing: border-box; color: rgb(0, 134, 179);">4</span>, <span style="box-sizing: border-box; color: rgb(0, 134, 179);">8</span>, <span style="box-sizing: border-box; color: rgb(0, 134, 179);">16</span>, <span style="box-sizing: border-box; color: rgb(0, 134, 179);">32</span>], <span style="box-sizing: border-box; color: rgb(167, 29, 93);">function</span>(<span style="box-sizing: border-box; color: rgb(51, 51, 51);">d</span>) { <span style="box-sizing: border-box; color: rgb(167, 29, 93);">return</span> d; });</font></pre><div style="text-align: start;"><span><font style="font-size: 18px;">Since a key function was specified (as the identity function), and the new data contains the numbers [4, 8, 16] which match existing elements in the document, the update selection contains three DIV elements. Leaving those elements as-is, we can append new elements for [1, 2, 32] using the enter selection:</font></span></div><div><font style="font-size: 18px;"><br/></font></div><pre style="color: rgb(36, 41, 46); font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace; text-align: start; background-color: rgb(246, 248, 250);"><font style="font-size: 18px;"><span style="box-sizing: border-box; color: rgb(51, 51, 51);">div</span>.<span style="box-sizing: border-box; color: rgb(121, 93, 163);">enter</span>().<span style="box-sizing: border-box; color: rgb(0, 134, 179);">append</span>(<span style="box-sizing: border-box; color: rgb(24, 54, 145);"><span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span>div<span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span></span>).<span style="box-sizing: border-box; color: rgb(0, 134, 179);">text</span>(<span style="box-sizing: border-box; color: rgb(167, 29, 93);">function</span>(<span style="box-sizing: border-box; color: rgb(51, 51, 51);">d</span>) { <span style="box-sizing: border-box; color: rgb(167, 29, 93);">return</span> d; });</font></pre><div style="text-align: start;"><span><font style="font-size: 18px;">Likewise, to remove the exiting elements [15, 23, 42]:</font></span></div><div><font style="font-size: 18px;"><br/></font></div><pre style="color: rgb(36, 41, 46); font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace; text-align: start; background-color: rgb(246, 248, 250);"><font style="font-size: 18px;"><span style="box-sizing: border-box; color: rgb(51, 51, 51);">div</span>.<span style="box-sizing: border-box; color: rgb(121, 93, 163);">exit</span>().<span style="box-sizing: border-box; color: rgb(0, 134, 179);">remove</span>();</font></pre><div style="text-align: start;"><span><font style="font-size: 18px;">Now the document body looks like this:</font></span></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>&lt;</span><span>div</span><span>&gt;1&lt;/</span><span>div</span><span>&gt;</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>&lt;</span><span>div</span><span>&gt;2&lt;/</span><span>div</span><span>&gt;</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>&lt;</span><span>div</span><span>&gt;4&lt;/</span><span>div</span><span>&gt;</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>&lt;</span><span>div</span><span>&gt;8&lt;/</span><span>div</span><span>&gt;</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>&lt;</span><span>div</span><span>&gt;16&lt;/</span><span>div</span><span>&gt;</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>&lt;</span><span>div</span><span>&gt;32&lt;/</span><span>div</span><span>&gt;</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>The order of the DOM elements matches the order of the data because the old data’s order and the new data’s order were consistent. If the new data’s order is different, use </span><a style="font-style: italic;" href="https://github.com/d3/d3-selection#selection_order">selection</a><a href="https://github.com/d3/d3-selection#selection_order">.order</a><span> to reorder the elements in the DOM. See the </span><a href="http://bl.ocks.org/mbostock/3808218">General Update Pattern</a><span> example thread for more on data joins.</span></font></div><div><br/></div><div><br/></div><div><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#selection_datum">#</a><span> </span><span style="font-style: italic;">selection</span><span>.</span><span style="font-weight: bold;">datum</span><span>([</span><span style="font-style: italic;">value</span><span>]) </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/selection/datum.js">&lt;&gt;</a></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>Gets or sets the bound data for each selected element. Unlike </span><a style="font-style: italic;" href="https://github.com/d3/d3-selection#selection_data">selection</a><a href="https://github.com/d3/d3-selection#selection_data">.data</a><span>, this method does not compute a join and does not affect indexes or the enter and exit selections.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>If a </span><span style="font-style: italic;">value</span><span> is specified, sets the element’s bound data to the specified value on all selected elements. If the </span><span style="font-style: italic;">value</span><span> is a constant, all elements are given the same datum; otherwise, if the </span><span style="font-style: italic;">value</span><span> is a function, it is evaluated for each selected element, in order, being passed the current datum (</span><span style="font-style: italic;">d</span><span>), the current index (</span><span style="font-style: italic;">i</span><span>), and the current group (</span><span style="font-style: italic;">nodes</span><span>), with </span><span style="font-style: italic;">this</span><span> as the current DOM element (</span><span style="font-style: italic;">nodes</span><span>[</span><span style="font-style: italic;">i</span><span>]). The function is then used to set each element’s new data. A null value will delete the bound data.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>If a </span><span style="font-style: italic;">value</span><span> is not specified, returns the bound datum for the first (non-null) element in the selection. This is generally useful only if you know the selection contains exactly one element.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>This method is useful for accessing HTML5 </span><a href="http://www.w3.org/TR/html5/dom.html#custom-data-attribute">custom data attributes</a><span>. For example, given the following elements:</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>&lt;</span><span>ul</span><span> </span><span>id</span><span>=</span><span>&quot;</span><span>list</span><span>&quot;</span><span>&gt;</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  &lt;</span><span>li</span><span> </span><span>data-username</span><span>=</span><span>&quot;</span><span>shawnbot</span><span>&quot;</span><span>&gt;Shawn Allen&lt;/</span><span>li</span><span>&gt;</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  &lt;</span><span>li</span><span> </span><span>data-username</span><span>=</span><span>&quot;</span><span>mbostock</span><span>&quot;</span><span>&gt;Mike Bostock&lt;/</span><span>li</span><span>&gt;</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>&lt;/</span><span>ul</span><span>&gt;</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>You can expose the custom data attributes by setting each element’s data as the built-in </span><a href="http://www.w3.org/TR/html5/dom.html#dom-dataset">dataset</a><span> property:</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div><font style="font-size: 18px;"><span style="box-sizing: border-box; color: rgb(51, 51, 51);">selection</span>.<span style="box-sizing: border-box; color: rgb(121, 93, 163);">datum</span>(<span style="box-sizing: border-box; color: rgb(167, 29, 93);">function</span>() { <span style="box-sizing: border-box; color: rgb(167, 29, 93);">return</span> <span style="box-sizing: border-box; color: rgb(0, 134, 179);">this</span>.<span style="box-sizing: border-box; color: rgb(51, 51, 51);">dataset</span>; })</font></div><div><font style="font-size: 18px;"><br/></font></div><div><span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;"><font style="font-size: 18px;"><a href="https://github.com/d3/d3-selection#selection_on">#</a><span> </span><span style="font-style: italic;">selection</span><span>.</span><span style="font-weight: bold;">on</span><span>(</span><span style="font-style: italic;">typenames</span><span>[, </span><span style="font-style: italic;">listener</span><span>[, </span><span style="font-style: italic;">capture</span><span>]]) </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/selection/on.js">&lt;&gt;</a></font></span></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>Adds or removes a </span><span style="font-style: italic;">listener</span><span> to each selected element for the specified event </span><span style="font-style: italic;">typenames</span><span>. The </span><span style="font-style: italic;">typenames</span><span> is a string event type, such as </span><span>click</span><span>, </span><span>mouseover</span><span>, or </span><span>submit</span><span>; any </span><a href="https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events">DOM event type</a><span> supported by your browser may be used. The type may be optionally followed by a period (</span><span>.</span><span>) and a name; the optional name allows multiple callbacks to be registered to receive events of the same type, such as </span><span>click.foo</span><span> and </span><span>click.bar</span><span>. To specify multiple typenames, separate typenames with spaces, such as </span><span>input change</span><span> or </span><span>click.foo click.bar</span><span>.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>When a specified event is dispatched on a selected element, the specified </span><span style="font-style: italic;">listener</span><span> will be evaluated for the element, being passed the current datum (</span><span style="font-style: italic;">d</span><span>), the current index (</span><span style="font-style: italic;">i</span><span>), and the current group (</span><span style="font-style: italic;">nodes</span><span>), with </span><span style="font-style: italic;">this</span><span> as the current DOM element (</span><span style="font-style: italic;">nodes</span><span>[</span><span style="font-style: italic;">i</span><span>]). Listeners always see the latest datum for their element, but the index is a property of the selection and is fixed when the listener is assigned; to update the index, re-assign the listener. To access the current event within a listener, use </span><a href="https://github.com/d3/d3-selection#event">d3.event</a><span>.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>If an event listener was previously registered for the same </span><span style="font-style: italic;">typename</span><span> on a selected element, the old listener is removed before the new listener is added. To remove a listener, pass null as the </span><span style="font-style: italic;">listener</span><span>. To remove all listeners for a given name, pass null as the </span><span style="font-style: italic;">listener</span><span> and </span><span>.foo</span><span> as the </span><span style="font-style: italic;">typename</span><span>, where </span><span>foo</span><span> is the name; to remove all listeners with no name, specify </span><span>.</span><span> as the </span><span style="font-style: italic;">typename</span><span>.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>An optional </span><span style="font-style: italic;">capture</span><span> flag may be specified which corresponds to the W3C </span><a href="http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-registration">useCapture flag</a><span>: “After initiating capture, all events of the specified type will be dispatched to the registered EventListener before being dispatched to any EventTargets beneath them in the tree. Events which are bubbling upward through the tree will not trigger an EventListener designated to use capture.”</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>If a </span><span style="font-style: italic;">listener</span><span> is not specified, returns the currently-assigned listener for the specified event </span><span style="font-style: italic;">typename</span><span> on the first (non-null) selected element, if any. If multiple typenames are specified, the first matching listener is returned.</span></font></div><div><br/></div><div><br/></div><div><br/></div><div><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#selection_dispatch">#</a><span> </span><span style="font-style: italic;">selection</span><span>.</span><span style="font-weight: bold;">dispatch</span><span>(</span><span style="font-style: italic;">type</span><span>[, </span><span style="font-style: italic;">parameters</span><span>]) </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/selection/dispatch.js">&lt;&gt;</a></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>Dispatches a </span><a href="http://www.w3.org/TR/dom/#interface-customevent">custom event</a><span> of the specified </span><span style="font-style: italic;">type</span><span> to each selected element, in order. An optional </span><span style="font-style: italic;">parameters</span><span> map may be specified to set additional properties of the event. It may contain the following fields:</span></font></div><div><font style="font-size: 18px;"><br/></font></div><ul style="color: rgb(36, 41, 46); font-family: -apple-system, system-ui, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; text-align: start;"><li><font style="font-size: 18px;"><a style="background-color: rgba(27, 31, 35, 0.0470588); color: rgb(3, 102, 214); font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace;" href="https://www.w3.org/TR/dom/#dom-event-bubbles">bubbles</a> - if true, the event is dispatched to ancestors in reverse tree order.</font></li><li><font style="font-size: 18px;"><a style="background-color: rgba(27, 31, 35, 0.0470588); color: rgb(3, 102, 214); font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace;" href="https://www.w3.org/TR/dom/#dom-event-cancelable">cancelable</a> - if true, <span style="font-style: italic;">event</span>.preventDefault is allowed.</font></li><li><font style="font-size: 18px;"><a style="background-color: rgba(27, 31, 35, 0.0470588); color: rgb(3, 102, 214); font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace;" href="https://www.w3.org/TR/dom/#dom-customevent-detail">detail</a> - any custom data associated with the event.</font></li></ul><div style="text-align: start;"><font style="font-size: 18px;"><span>If </span><span style="font-style: italic;">parameters</span><span> is a function, it is evaluated for each selected element, in order, being passed the current datum (</span><span style="font-style: italic;">d</span><span>), the current index (</span><span style="font-style: italic;">i</span><span>), and the current group (</span><span style="font-style: italic;">nodes</span><span>), with </span><span style="font-style: italic;">this</span><span> as the current DOM element (</span><span style="font-style: italic;">nodes</span><span>[</span><span style="font-style: italic;">i</span><span>]). It must return the parameters map for the current element.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div><font style="font-size: 18px;"><br/></font></div><div><font style="font-size: 18px;"><br/></font></div><div><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#event">#</a><span> d3.</span><span style="font-weight: bold;">event</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>The current </span><a href="https://developer.mozilla.org/en-US/docs/DOM/event">event</a><span>, if any. This is set during the invocation of an event listener, and is reset after the listener terminates. Use this to access standard event fields such as </span><a style="font-style: italic;" href="https://www.w3.org/TR/dom/#dom-event-timestamp">event</a><a href="https://www.w3.org/TR/dom/#dom-event-timestamp">.timeStamp</a><span> and methods such as </span><a style="font-style: italic;" href="https://www.w3.org/TR/dom/#dom-event-preventdefault">event</a><a href="https://www.w3.org/TR/dom/#dom-event-preventdefault">.preventDefault</a><span>. While you can use the native </span><a style="font-style: italic;" href="https://developer.mozilla.org/en/DOM/event.pageX">event</a><a href="https://developer.mozilla.org/en/DOM/event.pageX">.pageX</a><span> and </span><a style="font-style: italic;" href="https://developer.mozilla.org/en/DOM/event.pageY">event</a><a href="https://developer.mozilla.org/en/DOM/event.pageY">.pageY</a><span>, it is often more convenient to transform the event position to the local coordinate system of the container that received the event using </span><a href="https://github.com/d3/d3-selection#mouse">d3.mouse</a><span>, </span><a href="https://github.com/d3/d3-selection#touch">d3.touch</a><span> or </span><a href="https://github.com/d3/d3-selection#touches">d3.touches</a><span>.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>If you use Babel, Webpack, or another ES6-to-ES5 bundler, be aware that the value of d3.event changes during an event! An import of d3.event must be a </span><a href="http://www.2ality.com/2015/07/es6-module-exports.html">live binding</a><span>, so you may need to configure the bundler to import from D3’s ES6 modules rather than from the generated UMD bundle; not all bundlers observe </span><a href="https://github.com/rollup/rollup/wiki/jsnext:main">jsnext:main</a><span>. Also beware of conflicts with the </span><a style="font-style: italic;" href="https://developer.mozilla.org/en-US/docs/Web/API/Window/event">window</a><a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/event">.event</a><span> global.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#customEvent">#</a><span> d3.</span><span style="font-weight: bold;">customEvent</span><span>(</span><span style="font-style: italic;">event</span><span>, </span><span style="font-style: italic;">listener</span><span>[, </span><span style="font-style: italic;">that</span><span>[, </span><span style="font-style: italic;">arguments</span><span>]]) </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/selection/on.js#L98">&lt;&gt;</a></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>Invokes the specified </span><span style="font-style: italic;">listener</span><span>, using the specified </span><span style="font-style: italic;">that</span><span> </span><span>this</span><span> context and passing the specified </span><span style="font-style: italic;">arguments</span><span>, if any. During the invocation, </span><a href="https://github.com/d3/d3-selection#event">d3.event</a><span> is set to the specified </span><span style="font-style: italic;">event</span><span>; after the listener returns (or throws an error), d3.event is restored to its previous value. In addition, sets </span><span style="font-style: italic;">event</span><span>.sourceEvent to the prior value of d3.event, allowing custom events to retain a reference to the originating native event. Returns the value returned by the </span><span style="font-style: italic;">listener</span><span>.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#mouse">#</a><span> d3.</span><span style="font-weight: bold;">mouse</span><span>(</span><span style="font-style: italic;">container</span><span>) </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/mouse.js">&lt;&gt;</a></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>Returns the </span><span style="font-style: italic;">x</span><span> and </span><span style="font-style: italic;">y</span><span> coordinates of the </span><a href="https://github.com/d3/d3-selection#event">current event</a><span> relative to the specified </span><span style="font-style: italic;">container</span><span>. The container may be an HTML or SVG container element, such as a </span><a href="http://www.w3.org/TR/SVG/struct.html#Groups">G element</a><span> or an </span><a href="http://www.w3.org/TR/SVG/struct.html#SVGElement">SVG element</a><span>. The coordinates are returned as a two-element array of numbers [</span><span style="font-style: italic;">x</span><span>, </span><span style="font-style: italic;">y</span><span>].</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#touch">#</a><span> d3.</span><span style="font-weight: bold;">touch</span><span>(</span><span style="font-style: italic;">container</span><span>[, </span><span style="font-style: italic;">touches</span><span>], </span><span style="font-style: italic;">identifier</span><span>) </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/touch.js">&lt;&gt;</a></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>Returns the </span><span style="font-style: italic;">x</span><span> and </span><span style="font-style: italic;">y</span><span> coordinates of the touch with the specified </span><span style="font-style: italic;">identifier</span><span> associated with the </span><a href="https://github.com/d3/d3-selection#event">current event</a><span> relative to the specified </span><span style="font-style: italic;">container</span><span>. The container may be an HTML or SVG container element, such as a </span><a href="http://www.w3.org/TR/SVG/struct.html#Groups">G element</a><span> or an </span><a href="http://www.w3.org/TR/SVG/struct.html#SVGElement">SVG element</a><span>. The coordinates are returned as a two-element array of numbers [</span><span style="font-style: italic;">x</span><span>, </span><span style="font-style: italic;">y</span><span>]. If there is no touch with the specified identifier in </span><span style="font-style: italic;">touches</span><span>, returns null; this can be useful for ignoring touchmove events where the only some touches have moved. If </span><span style="font-style: italic;">touches</span><span> is not specified, it defaults to the current event’s </span><a href="http://developer.apple.com/library/safari/documentation/UserExperience/Reference/TouchEventClassReference/TouchEvent/TouchEvent.html#//apple_ref/javascript/instp/TouchEvent/changedTouches">changedTouches</a><span> property.</span></font></div><div><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#touches">#</a><span> d3.</span><span style="font-weight: bold;">touches</span><span>(</span><span style="font-style: italic;">container</span><span>[, </span><span style="font-style: italic;">touches</span><span>]) </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/touches.js">&lt;&gt;</a></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>Returns the </span><span style="font-style: italic;">x</span><span> and </span><span style="font-style: italic;">y</span><span> coordinates of the touches associated with the </span><a href="https://github.com/d3/d3-selection#event">current event</a><span> relative to the specified </span><span style="font-style: italic;">container</span><span>. The container may be an HTML or SVG container element, such as a </span><a href="http://www.w3.org/TR/SVG/struct.html#Groups">G element</a><span> or an </span><a href="http://www.w3.org/TR/SVG/struct.html#SVGElement">SVG element</a><span>. The coordinates are returned as an array of two-element arrays of numbers [[</span><span style="font-style: italic;">x1</span><span>, </span><span style="font-style: italic;">y1</span><span>], [</span><span style="font-style: italic;">x2</span><span>, </span><span style="font-style: italic;">y2</span><span>], …]. If </span><span style="font-style: italic;">touches</span><span> is not specified, it defaults to the current event’s </span><a href="http://developer.apple.com/library/safari/documentation/UserExperience/Reference/TouchEventClassReference/TouchEvent/TouchEvent.html#//apple_ref/javascript/instp/TouchEvent/touches">touches</a><span> property.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div><font style="font-size: 18px;"><br/></font></div><div><font style="font-size: 18px;"><br/></font></div><div><font style="font-size: 18px;"><br/></font></div><div><span><font style="font-size: 18px;">For advanced usage, selections provide methods for custom control flow.</font></span></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#selection_each">#</a><span> </span><span style="font-style: italic;">selection</span><span>.</span><span style="font-weight: bold;">each</span><span>(</span><span style="font-style: italic;">function</span><span>) </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/selection/each.js">&lt;&gt;</a></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>Invokes the specified </span><span style="font-style: italic;">function</span><span> for each selected element, in order, being passed the current datum (</span><span style="font-style: italic;">d</span><span>), the current index (</span><span style="font-style: italic;">i</span><span>), and the current group (</span><span style="font-style: italic;">nodes</span><span>), with </span><span style="font-style: italic;">this</span><span> as the current DOM element (</span><span style="font-style: italic;">nodes</span><span>[</span><span style="font-style: italic;">i</span><span>]). This method can be used to invoke arbitrary code for each selected element, and is useful for creating a context to access parent and child data simultaneously, such as:</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>parent</span><span>.</span><span>each</span><span>(</span><span>function</span><span>(</span><span>p</span><span>, </span><span>j</span><span>) {</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>  </span><span>d3</span><span>.</span><span>select</span><span>(</span><span>this</span><span>)</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>    .</span><span>selectAll</span><span>(</span><span>&quot;</span><span>.child</span><span>&quot;</span><span>)</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>      .</span><span>text</span><span>(</span><span>function</span><span>(</span><span>d</span><span>, </span><span>i</span><span>) { </span><span>return</span><span> </span><span>&quot;</span><span>child </span><span>&quot;</span><span> </span><span>+</span><span> </span><span>d</span><span>.</span><span>name</span><span> </span><span>+</span><span> </span><span>&quot;</span><span> of </span><span>&quot;</span><span> </span><span>+</span><span> </span><span>p</span><span>.</span><span>name</span><span>; });</span></font></div><div style="text-align: start;"><span><font style="font-size: 18px;">});</font></span></div><div style="text-align: start;"><font style="font-size: 18px;"><span>See </span><a href="http://bl.ocks.org/mbostock/4c5fad723c87d2fd8273">Sized Donut Multiples</a><span> for an example.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#selection_call">#</a><span> </span><span style="font-style: italic;">selection</span><span>.</span><span style="font-weight: bold;">call</span><span>(</span><span style="font-style: italic;">function</span><span>[, </span><span style="font-style: italic;">arguments…</span><span>]) </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/selection/call.js">&lt;&gt;</a></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>Invokes the specified </span><span style="font-style: italic;">function</span><span> exactly once, passing in this selection along with any optional </span><span style="font-style: italic;">arguments</span><span>. Returns this selection. This is equivalent to invoking the function by hand but facilitates method chaining. For example, to set several styles in a reusable function:</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>function</span><span> </span><span>name</span><span>(</span><span>selection</span><span>, </span><span>first</span><span>, </span><span>last</span><span>) {</span></font></div><div style="text-align: start;"><span><font style="font-size: 18px;">  selection</font></span></div><div style="text-align: start;"><font style="font-size: 18px;"><span>      .</span><span>attr</span><span>(</span><span>&quot;</span><span>first-name</span><span>&quot;</span><span>, first)</span></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>      .</span><span>attr</span><span>(</span><span>&quot;</span><span>last-name</span><span>&quot;</span><span>, last);</span></font></div><div style="text-align: start;"><span><font style="font-size: 18px;">}</font></span></div><div style="text-align: start;"><span><font style="font-size: 18px;">Now say:</font></span></div><div><font style="font-size: 18px;"><br/></font></div><pre style="color: rgb(36, 41, 46); font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace; text-align: start; background-color: rgb(246, 248, 250);"><font style="font-size: 18px;"><span style="box-sizing: border-box; color: rgb(51, 51, 51);">d3</span>.<span style="box-sizing: border-box; color: rgb(121, 93, 163);">selectAll</span>(<span style="box-sizing: border-box; color: rgb(24, 54, 145);"><span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span>div<span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span></span>).<span style="box-sizing: border-box; color: rgb(0, 134, 179);">call</span>(name, <span style="box-sizing: border-box; color: rgb(24, 54, 145);"><span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span>John<span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span></span>, <span style="box-sizing: border-box; color: rgb(24, 54, 145);"><span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span>Snow<span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span></span>);</font></pre><div style="text-align: start;"><span><font style="font-size: 18px;">This is roughly equivalent to:</font></span></div><div><font style="font-size: 18px;"><br/></font></div><pre style="color: rgb(36, 41, 46); font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace; text-align: start; background-color: rgb(246, 248, 250);"><font style="font-size: 18px;"><span style="box-sizing: border-box; color: rgb(121, 93, 163);">name</span>(<span style="box-sizing: border-box; color: rgb(51, 51, 51);">d3</span>.<span style="box-sizing: border-box; color: rgb(121, 93, 163);">selectAll</span>(<span style="box-sizing: border-box; color: rgb(24, 54, 145);"><span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span>div<span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span></span>), <span style="box-sizing: border-box; color: rgb(24, 54, 145);"><span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span>John<span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span></span>, <span style="box-sizing: border-box; color: rgb(24, 54, 145);"><span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span>Snow<span style="box-sizing: border-box; color: rgb(24, 54, 145);">&quot;</span></span>);</font></pre><div style="text-align: start;"><font style="font-size: 18px;"><span>The only difference is that </span><span style="font-style: italic;">selection</span><span>.call always returns the </span><span style="font-style: italic;">selection</span><span> and not the return value of the called </span><span style="font-style: italic;">function</span><span>, </span><span>name</span><span>.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#selection_empty">#</a><span> </span><span style="font-style: italic;">selection</span><span>.</span><span style="font-weight: bold;">empty</span><span>() </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/selection/empty.js">&lt;&gt;</a></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><span><font style="font-size: 18px;">Returns true if this selection contains no (non-null) elements.</font></span></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#selection_nodes">#</a><span> </span><span style="font-style: italic;">selection</span><span>.</span><span style="font-weight: bold;">nodes</span><span>() </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/selection/nodes.js">&lt;&gt;</a></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><span><font style="font-size: 18px;">Returns an array of all (non-null) elements in this selection.</font></span></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#selection_node">#</a><span> </span><span style="font-style: italic;">selection</span><span>.</span><span style="font-weight: bold;">node</span><span>() </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/selection/node.js">&lt;&gt;</a></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><span><font style="font-size: 18px;">Returns the first (non-null) element in this selection. If the selection is empty, returns null.</font></span></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#selection_size">#</a><span> </span><span style="font-style: italic;">selection</span><span>.</span><span style="font-weight: bold;">size</span><span>() </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/selection/size.js">&lt;&gt;</a></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><span><font style="font-size: 18px;">Returns the total number of elements in this selection.</font></span></div><div><font style="font-size: 18px;"><br/></font></div><div><font style="font-size: 18px;"><br/></font></div><div><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#local">#</a><span> d3.</span><span style="font-weight: bold;">local</span><span>() </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/local.js">&lt;&gt;</a></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><span><font style="font-size: 18px;">Declares a new local variable. For example:</font></span></div><div><font style="font-size: 18px;"><br/></font></div><pre style="color: rgb(36, 41, 46); font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace; text-align: start; background-color: rgb(246, 248, 250);"><font style="font-size: 18px;"><span style="box-sizing: border-box; color: rgb(167, 29, 93);">var</span> foo <span style="box-sizing: border-box; color: rgb(167, 29, 93);">=</span> <span style="box-sizing: border-box; color: rgb(51, 51, 51);">d3</span>.<span style="box-sizing: border-box; color: rgb(121, 93, 163);">local</span>();</font></pre><div style="text-align: start;"><font style="font-size: 18px;"><span>Like </span><span>var</span><span>, each local is a distinct symbolic reference; unlike </span><span>var</span><span>, the value of each local is also scoped by the DOM.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#local_set">#</a><span> </span><span style="font-style: italic;">local</span><span>.</span><span style="font-weight: bold;">set</span><span>(</span><span style="font-style: italic;">node</span><span>, </span><span style="font-style: italic;">value</span><span>) </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/local.js#L18">&lt;&gt;</a></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>Sets the value of this local on the specified </span><span style="font-style: italic;">node</span><span> to the </span><span style="font-style: italic;">value</span><span>, and returns the specified </span><span style="font-style: italic;">value</span><span>. This is often performed using </span><a style="font-style: italic;" href="https://github.com/d3/d3-selection#selection_each">selection</a><a href="https://github.com/d3/d3-selection#selection_each">.each</a><span>:</span></font></div><div><font style="font-size: 18px;"><br/></font></div><pre style="color: rgb(36, 41, 46); font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace; text-align: start; background-color: rgb(246, 248, 250);"><font style="font-size: 18px;"><span style="box-sizing: border-box; color: rgb(51, 51, 51);">selection</span>.<span style="box-sizing: border-box; color: rgb(121, 93, 163);">each</span>(<span style="box-sizing: border-box; color: rgb(167, 29, 93);">function</span>(<span style="box-sizing: border-box; color: rgb(51, 51, 51);">d</span>) { <span style="box-sizing: border-box; color: rgb(51, 51, 51);">foo</span>.<span style="box-sizing: border-box; color: rgb(0, 134, 179);">set</span>(<span style="box-sizing: border-box; color: rgb(0, 134, 179);">this</span>, <span style="box-sizing: border-box; color: rgb(51, 51, 51);">d</span>.<span style="box-sizing: border-box; color: rgb(0, 134, 179);">value</span>); });</font></pre><div style="text-align: start;"><font style="font-size: 18px;"><span>If you are just setting a single variable, consider using </span><a style="font-style: italic;" href="https://github.com/d3/d3-selection#selection_property">selection</a><a href="https://github.com/d3/d3-selection#selection_property">.property</a><span>:</span></font></div><div><font style="font-size: 18px;"><br/></font></div><pre style="color: rgb(36, 41, 46); font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace; text-align: start; background-color: rgb(246, 248, 250);"><font style="font-size: 18px;"><span style="box-sizing: border-box; color: rgb(51, 51, 51);">selection</span>.<span style="box-sizing: border-box; color: rgb(121, 93, 163);">property</span>(foo, <span style="box-sizing: border-box; color: rgb(167, 29, 93);">function</span>(<span style="box-sizing: border-box; color: rgb(51, 51, 51);">d</span>) { <span style="box-sizing: border-box; color: rgb(167, 29, 93);">return</span> <span style="box-sizing: border-box; color: rgb(51, 51, 51);">d</span>.<span style="box-sizing: border-box; color: rgb(0, 134, 179);">value</span>; });</font></pre><div style="text-align: start;"><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#local_get">#</a><span> </span><span style="font-style: italic;">local</span><span>.</span><span style="font-weight: bold;">get</span><span>(</span><span style="font-style: italic;">node</span><span>) </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/local.js#L13">&lt;&gt;</a></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>Returns the value of this local on the specified </span><span style="font-style: italic;">node</span><span>. If the </span><span style="font-style: italic;">node</span><span> does not define this local, returns the value from the nearest ancestor that defines it. Returns undefined if no ancestor defines this local.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#local_remove">#</a><span> </span><span style="font-style: italic;">local</span><span>.</span><span style="font-weight: bold;">remove</span><span>(</span><span style="font-style: italic;">node</span><span>) </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/local.js#L21">&lt;&gt;</a></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>Deletes this local’s value from the specified </span><span style="font-style: italic;">node</span><span>. Returns true if the </span><span style="font-style: italic;">node</span><span> defined this local prior to removal, and false otherwise. If ancestors also define this local, those definitions are unaffected, and thus </span><a style="font-style: italic;" href="https://github.com/d3/d3-selection#local_get">local</a><a href="https://github.com/d3/d3-selection#local_get">.get</a><span> will still return the inherited value.</span></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><a href="https://github.com/d3/d3-selection#local_toString">#</a><span> </span><span style="font-style: italic;">local</span><span>.</span><span style="font-weight: bold;">toString</span><span>() </span><a title="Source" href="https://github.com/d3/d3-selection/blob/master/src/local.js#L24">&lt;&gt;</a></font></div><div><font style="font-size: 18px;"><br/></font></div><div style="text-align: start;"><font style="font-size: 18px;"><span>Returns the automatically-generated identifier for this local. This is the name of the property that is used to store the local’s value on elements, and thus you can also set or get the local’s value using </span><span style="font-style: italic;">element</span><span>[</span><span style="font-style: italic;">local</span><span>] or by using </span><a style="font-style: italic;" href="https://github.com/d3/d3-selection#selection_property">selection</a><a href="https://github.com/d3/d3-selection#selection_property">.property</a><span>.</span></font></div><div><br/></div><div><br/></div><div><br/></div><div><span style="font-weight: bold;"><br/></span></div></en-note>
]]></content><created>20170523T073010Z</created><updated>20170523T153912Z</updated><tag>third week</tag><note-attributes><latitude>30.26171849917197</latitude><longitude>120.1158168424594</longitude><altitude>15</altitude><author>xialuokecaocao@outlook.com</author><source>desktop.mac</source><reminder-order>0</reminder-order></note-attributes></note>
</en-export>
